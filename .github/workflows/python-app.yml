# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5 #You can cache and restore the dependencies using the setup-python action
      #By default, the setup-python action searches for the dependency file (requirements.txt for pip, Pipfile.lock for pipenv or poetry.lock for poetry) in the whole repository. 
      with:
        python-version: "3.13" #Specific Python Version
    - name: Display Python version #Testing my matrix by printing the current Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies #You can use pip to install dependencies from the PyPI package registry before building and testing your code. 
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest pytest-cov tox
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      #After you update pip, a typical next step is to install dependencies from requirements.txt.
    - name: Lint with Ruff
      run: |
        ruff check --output-format=github .
      continue-on-error: true
    - name: Test with pytest
      run: |
        pytest --doctest-modules --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html --cov=./
      continue-on-error: true
    - name: Run tox
      # Run tox using the version of Python in `PATH`
      run: tox -e py
    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ python-version }}
        path: junit/test-results-${{ python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
